apiVersion: apps/v1
kind: Deployment
metadata:
  name: analytics
spec:
  replicas: 1
  selector:
    matchLabels:
      app: analytics
  template:
    metadata:
      labels:
        app: analytics
    spec:
      containers:
      - name: analytics
        image: pb2323/analytics-service:latest
        imagePullPolicy: Always
        command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]
        ports:
        - containerPort: 8000
        env:
        - name: MONGODB_URI
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: mongodb_uri
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: db_name
        - name: REDIS_URL
          value: redis://redis:6379/0
        - name: ENVIRONMENT
          value: development
---
apiVersion: v1
kind: Service
metadata:
  name: analytics
spec:
  selector:
    app: analytics
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:6.2-alpine
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  selector:
    app: redis
  ports:
  - protocol: TCP
    port: 6379
    targetPort: 6379

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: celery-worker
  template:
    metadata:
      labels:
        app: celery-worker
    spec:
      containers:
      - name: celery-worker
        image: pb2323/analytics-service:latest
        imagePullPolicy: Always
        command: ["celery", "-A", "tasks", "worker", "--queues=sync", "--loglevel=debug"]
        env:
        - name: MONGODB_URI
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: mongodb_uri
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: db_name
        - name: REDIS_URL
          value: redis://redis:6379/0
        - name: ENVIRONMENT
          value: development

---


apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  replicas: 1 # Adjust based on your requirements
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: pb2323/frontend-service:latest # Replace with your Docker Hub image
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
        env:
        - name: NEXT_PUBLIC_IS_KUBERNETES_ENV
          value: "true"

---

apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  selector:
    app: frontend
  ports:
  - protocol: TCP
    port: 80 # Port exposed by the service
    targetPort: 3000 # Port exposed by the container

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: devquest-ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - host: devquest.io # Replace with your domain name in production
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: analytics
            port:
              number: 8000
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              number: 80
